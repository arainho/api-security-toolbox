FROM golang:alpine3.14 AS build-env

ENV MY_USER="appuser"
ENV MY_GROUP="appgroup"
ENV MY_HOME="/home/$MY_USER"

# general setup
RUN mkdir -p /usr/share/plugins && \
    mkdir -p /usr/share/wordlists && \
    mkdir -p /usr/share/extensions && \
    mkdir -p /usr/share/templates && \
    mkdir -p /usr/share/signatures && \
    apk update && \
    apk add --no-cache ca-certificates curl wget nmap netcat-openbsd coreutils \
                       bind-tools git less openssh build-base libzip-dev zip bash && \

    # python setup
    apk add --no-cache python3 py3-pip && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    python3 -m pip install --upgrade pip setuptools && \

    # set golang and python in path
    echo export PATH="$HOME/go/bin:$PATH" >> ~/.bashrc  && \
    echo export PATH="$(python3 -m site --user-base)/bin:${PATH}" >> ~/.bashrc

FROM golang:alpine3.14
LABEL org.opencontainers.image.authors="github.com/arainho"

ENV MY_USER="appuser"
ENV MY_GROUP="appgroup"
ENV MY_HOME="/home/$MY_USER"

# general setup
RUN mkdir -p /usr/share/plugins && \
    mkdir -p /usr/share/wordlists && \
    mkdir -p /usr/share/extensions && \
    mkdir -p /usr/share/templates && \
    mkdir -p /usr/share/signatures && \
    apk update && \
    apk add --no-cache ca-certificates curl wget nmap netcat-openbsd coreutils \
                       bind-tools git less openssh build-base libzip-dev zip bash && \

    # python setup
    apk add --no-cache python3 py3-pip && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    python3 -m pip install --upgrade pip setuptools && \

    # set golang and python in path
    echo export PATH="$HOME/go/bin:$PATH" >> ~/.bashrc  && \
    echo export PATH="$(python3 -m site --user-base)/bin:${PATH}" >> ~/.bashrc
